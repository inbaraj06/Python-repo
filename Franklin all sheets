
import pandas as pd 
import numpy as np
import matplotlib.pyplot as plt
input_path= r'C:\Users\6360isriniva\work\frmf2.xlsx'
print(input_path)
yl = pd.ExcelFile(input_path)
res = len(yl.sheet_names)
print(res)
x=[]
for i in range(0,res):
  clm =pd.read_excel(input_path,sheet_name=i,
                 skiprows=[2,3],
                 index_col=0,
                 usecols=5)
  if len(clm.columns) ==5: 
     df1=pd.read_excel(input_path,sheet_name=i,
                 skiprows=[2,3],
                 index_col=0,names=['Instrument','Industry','Quantity','MarketValue','Percentage Assets'],
                 usecols=5)
     df1['FundName'] =df1.index.name.split('As')[0]
     df1=df1.dropna(subset=['Instrument'])
     df1=df1.dropna(subset=['Industry'])
     df1=df1.dropna(subset=['Quantity'])
     df1=df1.dropna(subset=['MarketValue'])
     df1['Quantity']=df1['Quantity'].astype('int64')
     df1['MarketValue']=df1['MarketValue'].astype('float64')
     df1['Percentage Assets']=df1.loc[ :,'Percentage Assets'].replace(['*','0.00*'],0)
     df1['Percentage Assets']=df1['Percentage Assets'].astype('float64')
     df1['Asset']=df1['Industry'].apply(lambda x:'Govse' if ('SOVEREIGN' in x )  else ('Debt' if ('CRISIL' in x or 'ICRA' in x or 'CARE' in x or 'BWR' in x or 'IND A' in x ) else 'Equity'))
     x.append(df1)
df2=pd.concat(x)
df2.index.name='ISIN Number'
print(df2.columns,df2.dtypes)
#df2.to_excel(r'C:\Users\6360isriniva\work\rs5.xlsx')
df2.to_excel(r'C:\Users\6360isriniva\work\rs6.xlsx')

import pandas as pd 
import numpy as np
import matplotlib.pyplot as plt
df1=pd.read_excel(r'C:\Users\6360isriniva\work\rs5.xlsx',
                 index_col=0)
df2=pd.read_excel(r'C:\Users\6360isriniva\work\rs6.xlsx',
                 index_col=0)
df1=df1.dropna(0)
df2=df2.dropna(0)
print(type(df1),type(df2),sep='\n')
print(df1.dtypes,df2.dtypes,sep='\n')
print(df1.head(),df2.head(),sep='\n')
df5=pd.merge(df1,df2,on=['ISIN Number','FundName'],how='outer')
df5.update(df5[['Quantity_x','Quantity_y','MarketValue_x','MarketValue_y',
                'Percentage Assets_x','Percentage Assets_y']].fillna(0))
df5['Quantity_diff']=(df5['Quantity_x']-df5['Quantity_y'])
df5['MarketValue_diff']=(df5['MarketValue_x']-df5['MarketValue_y'])
df5['Percentage Assets_diff']=(df5['Percentage Assets_x']-df5['Percentage Assets_y'])
df5['Stockname']=np.where(df5.Instrument_x.isnull(),df5.Instrument_y,df5.Instrument_x)
df5['Asset']=np.where(df5.Asset_x.isnull(),df5.Asset_y,df5.Asset_x)
df5['% Quantity']=((df5['Quantity_x']-df5['Quantity_y'])/np.where(df5.Quantity_x==0,df5.Quantity_y,df5.Quantity_x))*100
#df5.to_excel(r'C:\Users\Admin\Downloads\work\rs3.xlsx')
#df5.to_excel(r'C:\Users\6360isriniva\work\rs3.xlsx')
print(df5['FundName'].unique())
x=df5[df5['Asset']=='Equity']
y=x['FundName'].unique().tolist()
print(len(y))
print(y)
with PdfPages(r'C:\Users\6360isriniva\work\FMF_Analysis.pdf') as export_pdf:
    for i in y:
       print('value is ',i)
       fig,(ax1,ax2)=plt.subplots(nrows=1,ncols=2,figsize=(20,10))
       x=df5[(df5['Asset']=='Equity') & (df5['FundName']== i) & (df5['% Quantity'] >= 0)].groupby('Stockname').sum().nlargest(5,'% Quantity').sort_values(by='% Quantity',ascending=False)
       data_list_x= x[['Quantity_x','Quantity_y','% Quantity']]
       
       x.plot(y=['Quantity_x','Quantity_y'],
              title=i+'\n(% Qty Increased)',kind='bar',ax=ax1,rot=80)
       
       z=df5[(df5['Asset']=='Equity') & (df5['FundName']== i) & (df5['% Quantity'] <= 0)].groupby('Stockname').sum().nsmallest(5,'% Quantity').sort_values(by='% Quantity')
       data_list_z=z[['Quantity_x','Quantity_y','% Quantity']]
       
       z.plot(y=['Quantity_x','Quantity_y'],
               title=i+'\n(%Qty Decreased)',kind='bar',ax=ax2,rot=75)
       export_pdf.savefig()
       plt.close()      
       
       fig,(ax3,ax4)=plt.subplots(nrows=1,ncols=2)
       ax3.table(cellText=data_list_x.values,
           rowLabels=data_list_x.index.values,
          colLabels=data_list_x.columns.values,loc="upper center")
       ax4.table(cellText=data_list_z.values,
           rowLabels=data_list_z.index.values,
          colLabels=data_list_z.columns.values,loc="lower center")
       ax3.axis("off")
       ax4.axis("off")
       plt.tight_layout()
       export_pdf.savefig()
       plt.close()      
