import pandas as pd 
import numpy  as np
import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
input_path= r'C:\Users\6360isriniva\work\Franklin\df_franklin.xlsx'
df1=pd.read_excel(input_path,sheet_name=3,index_col=0)
df2=pd.read_excel(input_path,sheet_name=4,index_col=0)
df1=df1.dropna(0)
df2=df2.dropna(0)
print(type(df1),type(df2),sep='\n')
print(df1.dtypes,df2.dtypes,sep='\n')
print(df1.head(),df2.head(),sep='\n')
df5=pd.merge(df1,df2,on=['ISIN Number','FundName'],how='outer')
df5.update(df5[['Quantity_x','Quantity_y','MarketValue_x','MarketValue_y',
                'Percentage Assets_x','Percentage Assets_y']].fillna(0))
df5['Quantity_diff']=(df5['Quantity_x']-df5['Quantity_y'])
df5['MarketValue_diff']=(df5['MarketValue_x']-df5['MarketValue_y'])
df5['Percentage Assets_diff']=(df5['Percentage Assets_x']-df5['Percentage Assets_y'])
df5['Stockname']=np.where(df5.Instrument_x.isnull(),df5.Instrument_y,df5.Instrument_x)
df5['Asset']=np.where(df5.Asset_x.isnull(),df5.Asset_y,df5.Asset_x)
df5['% Quantity']=((df5['Quantity_x']-df5['Quantity_y'])/np.where(df5.Quantity_x==0,df5.Quantity_y,df5.Quantity_x))*100
#df5.to_excel(r'C:\Users\Admin\Downloads\work\rs3.xlsx')
df5.to_excel(r'C:\Users\6360isriniva\work\comp.xlsx')
print(df5['FundName'].unique())
x=df5[df5['Asset']=='Equity']
y=x['FundName'].unique().tolist()
print(len(y))
print(y)
with PdfPages(r'C:\Users\6360isriniva\work\Franklin\AugvsJul.pdf') as export_pdf:
    for i in y:
       print('value is ',i)
       fig,((ax1,ax2),(ax3,ax4))=plt.subplots(2,2,figsize=(20,15))
       x=df5[(df5['Asset']=='Equity') & (df5['FundName']== i) & (df5['% Quantity'] > 0)].groupby('Stockname').sum().nlargest(5,'% Quantity').sort_values(by='% Quantity',ascending=False)
       
       if not x.empty:
          data_list_x= x[['Quantity_x','Quantity_y','% Quantity']]
       
          x.plot(y=['Quantity_x','Quantity_y'],
              title=i+'\n(% Qty Increased)',kind='bar',ax=ax1,rot=80,fontsize=15)
       
       z=df5[(df5['Asset']=='Equity') & (df5['FundName']== i) & (df5['% Quantity'] < 0)].groupby('Stockname').sum().nsmallest(5,'% Quantity').sort_values(by='% Quantity')
       
       if not z.empty:
          data_list_z=z[['Quantity_x','Quantity_y','% Quantity']]
       
          z.plot(y=['Quantity_x','Quantity_y'],
               title=i+'\n(%Qty Decreased)',kind='bar',ax=ax2,rot=75,fontsize=15)
              #fig,(ax3,ax4)=plt.subplots(nrows=1,ncols=2,figsize=(20,10))
       if not x.empty:
           
           ax3.table(cellText=data_list_x.values.tolist(),
                rowLabels=x.index.values.tolist(),
                colLabels=data_list_x.columns.values,fontsize=15,
                 colWidths=[0.2]*3,rowLoc='left',
                 loc='center right')
       
       if not z.empty:
           ax4.table(cellText=data_list_z.values.tolist(),
           rowLabels=z.index.values.tolist(),
          colLabels=data_list_z.columns.values,fontsize=25,
          colWidths=[0.25]*3,rowLoc='left',
          loc='center right')
       ax3.axis("off")
       ax4.axis("off")
       fig.suptitle(i,fontsize=40)
       #plt.tight_layout()
       export_pdf.savefig()
       plt.close()      
